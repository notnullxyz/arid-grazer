swagger: '2.0'
info:
  title: Arid-Grazer API (AGAPI)
  description: Post-Office emulating routing for packaged messages.
  version: 1.0.0
host: notnull.xyz
schemes:
  - http
basePath: /
produces:
  - application/json
consumes:
  - application/json
parameters:
  ApiVersionHeader:
    name: API-Version
    description: The required API Version to query
    type: int
    in: header
    required: true
paths:
  /package:
    put:
      summary: Submit a package into the system
      description: |
        The package endpoint puts a new packaged message on to the system and
        fires off the lifecycle.
      parameters:
        - $ref: '#/parameters/ApiVersionHeader'
        - name: dest
          in: path
          description: The *uniq* of the destination (the recipient)
          required: true
          type: string
        - name: payload
          in: body
          description: The package payload (contents).
          required: true
          schema:
            $ref: '#/definitions/PackageCreateSchema'
      tags:
        - Package
      responses:
        202:
          description: |
            New package accepted into the system, further processing is pending.
          schema:
            $ref: '#/definitions/AcceptPackageResSchema'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    get:
      tags:
        - Package
      summary: Retrieve a stored package (a package that was sent and persisted)
      description: |
        This endpoint retrieves a package by its stored reference/identifier.
      parameters:
        - $ref: '#/parameters/ApiVersionHeader'
        - name: package_id
          in: path
          description: The package internal system id
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: The retrieved package
          schema:
            $ref: '#/definitions/PackageRetrieveSchema'
        404:
          description: The package was not found in the system due to expiry or removal.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /user:
    post:
      summary: User Create
      description: |
        The user create endpoint registeres a new user on the system.
      parameters:
        - $ref: '#/parameters/ApiVersionHeader'
        - name: user_info
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserMutationSchema'
      tags:
        - User
      responses:
        201:
          description: A user resource was created.
          schema:
            $ref: '#/definitions/UserInfoSchema'
        400:
          description: The user was not created.
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: User Profile
      description: |
        The User Profile endpoint returns information about the authenticated
        user's application details, including the **uniq name**'.
      parameters:
        - $ref: '#/parameters/ApiVersionHeader'
        - name: uniq
          in: path
          description: The **uniq** of this user.
          required: true
          type: string
      tags:
        - User
      responses:
        200:
          description: Profile information for a user
          schema:
            $ref: '#/definitions/UserInfoSchema'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update user information for the authenticated user
      description: This augments the user information on the system with the supplied values.
      parameters:
        - $ref: '#/parameters/ApiVersionHeader'
        - name: uniq
          in: path
          description: The **uniq** of this user.
          required: true
          type: string
        - name: user_info
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserMutationSchema'
      tags:
        - User
      responses:
        200:
          description: The updated user information
          schema:
            $ref: '#/definitions/UserInfoSchema'
        400:
          description: The user information was not updated.
          schema:
            $ref: '#/definitions/Error'
definitions:
  UserInfoSchema:
    type: object
    properties:
      uniq:
        type: string
        description: The user uniq on the system
      email:
        type: string
        description: A valid email address associated with this user
      created:
        type: string
        format: date-time
        description: Creation date set by the system
      active:
        type: boolean
        description: Whether this is an active user
  UserMutationSchema:
    type: object
    properties:
      email:
        type: string
        description: A valid email address associated with this user
  AcceptPackageResSchema:
    type: object
    properties:
      package_id:
        type: integer
        format: int64
  PackageCreateSchema:
    type: object
    properties:
      label:
        type: string
        description: The label as a simple string identifying the package.
      expire:
        type: integer
        format: int32
        description: An optional expiry time, where the system will discard the package if not claimed.
      content:
        type: string
        format: binary
        description: The package content as binary sequence of octets
  PackageRetrieveSchema:
    type: object
    properties:
      origin:
        type: string
        description: The *uniq* of the sender, or origin.
      label:
        type: string
        description: The label as a simple human-readable identifier, as supplied by origin.
      sent:
        type: string
        format: date-time
        description: The date-time the package was submitted into the system.
      content:
        type: string
        format: binary
        description: The package contents as binary sequence of octetsa
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
