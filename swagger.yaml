swagger: '2.0'
info:
  title: Arid-Grazer API
  description: Post-Office emulation routing for packaged messages.
  version: 1.0.0
host: notnull.xyz
schemes:
  - https
basePath: /
produces:
  - application/json
paths:
  /packages:
    put:
      summary: Submit a package into the system
      description: |
        The package endpoint puts a new packaged message on to the system and
        fires off the lifecycle.
      parameters:
        - name: payload
          in: body
          description: The main package payload including metadata.
          required: true
          schema:
            $ref: '#/definitions/PackagePayloadSchema'
      tags:
        - Packages
      responses:
        202:
          description: |
            New package accepted into the system, further processing is pending.
          schema:
            $ref: '#/definitions/AcceptPackageResSchema'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    get:
      tags:
        - Packages
      summary: Track a package marked as trackable.
      description: |
        This endpoint retrieves trackibg information on a package.
      parameters:
        - name: package_id
          in: query
          description: The package internal system id
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: The information for a submitted package with tracking information.
          schema:
            $ref: '#/definitions/PackageTransitInfoSchema'
        404:
          description: The package was not found in the system due to expiry or removal.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /me:
    get:
      summary: User Profile
      description: |
        The User Profile endpoint returns information about the authenticated
        user's application details, including the **uniq name**'.
      parameters:
        - name: uniq
          in: query
          description: The **uniq** of this user.
          required: true
          type: string
      tags:
        - User
      responses:
        200:
          description: Profile information for a user
          schema:
            $ref: '#/definitions/UserInfoSchema'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update user information for the authenticated user
      description: This augments the user information on the system with the supplied values.
      parameters:
        - name: uniq
          in: query
          description: The **uniq** of this user.
          required: true
          type: string
        - name: user_info
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserUpdateSchema'
      tags:
        - User
      responses:
        200:
          description: The updated user information
          schema:
            $ref: '#/definitions/UserInfoSchema'
        400:
          description: The user information was not updated.
          schema:
            $ref: '#/definitions/Error'
definitions:
  UserInfoSchema:
    type: object
    properties:
      uniq:
        type: string
        description: The user uniq on the system
      email:
        type: string
        description: A valid email address associated with this user
  UserUpdateSchema:
    type: object
    properties:
      email:
        type: string
        description: A valid email address associated with this user
  PackageTransitInfoSchema:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: The internal package ID.
      status:
        type: integer
        format: int32
        description: The last status applied by a stage of internal processing
      touchtime:
        type: string
        format: dateTime
        description: The RFC3339 date-time of the last status update
      origin:
        type: string
        description: The **uniq** of the package origin (sender's uniq).
      dest:
        type: string
        description: The **uniq** of the package destination (recipient's uniq).
  AcceptPackageResSchema:
    type: object
    properties:
      package_id:
        type: integer
        format: int64
  PackagePayloadSchema:
    type: object
    properties:
      dest_uniq:
        type: string
        description: 'Unique identifier of the destination, as a uniq name.'
      label:
        type: string
        description: The label as a simple string identifying the package.
      content:
        type: string
        format: binary
        description: The package content as binary octet string
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
